{"ast":null,"code":"import _objectSpread from \"/home/salim/Projects/React/project_album/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/salim/Projects/React/project_album/frontend/src/PasswordForget/index.js\";\nimport React, { Component } from 'react';\nimport { Grid, Message, Button, Form, Segment, Header, Image } from 'semantic-ui-react';\nimport * as ROUTES from '../constants/routes';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\n\nconst PasswordForgetPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(Grid, {\n  textAlign: \"center\",\n  className: \"login-background\",\n  style: {\n    height: 100 + 'vh',\n    margin: 0\n  },\n  verticalAlign: \"middle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(Grid.Column, {\n  floated: \"right\",\n  style: {\n    paddingTop: \"25vh\",\n    maxWidth: 450,\n    backgroundColor: \"white\",\n    height: \"100vh\",\n    alignContent: \"left\"\n  },\n  width: \"16\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(Header, {\n  as: \"h2\"\n  /* color=\"black\" */\n  ,\n  style: {\n    color: \"black\"\n  },\n  textAlign: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: require('../assets/images/album-icon.png'),\n  circular: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), \"Reset Your Password\"), React.createElement(PasswordForgetForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}))));\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n  loading: false\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const email = this.state.email;\n      this.setState({\n        loading: true\n      });\n      this.props.firebase.resetPassword(email).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          error = _this$state.error,\n          loading = _this$state.loading;\n    const isInvalid = email === '';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: isInvalid,\n      color: \"google plus\",\n      fluid: true,\n      size: \"large\",\n      type: \"submit\",\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Reset My Password\"), error && React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, error.message))));\n  }\n\n}\n\nconst PasswordForgetLink = () => React.createElement(Message, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: ROUTES.PASSWORD_FORGET,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, \"Forgot Password?\"));\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\nexport default PasswordForgetPage;\nexport { PasswordForgetForm, PasswordForgetLink };","map":{"version":3,"sources":["/home/salim/Projects/React/project_album/frontend/src/PasswordForget/index.js"],"names":["React","Component","Grid","Message","Button","Form","Segment","Header","Image","ROUTES","Link","withFirebase","PasswordForgetPage","height","margin","paddingTop","maxWidth","backgroundColor","alignContent","color","require","INITIAL_STATE","email","error","loading","PasswordForgetFormBase","constructor","props","onSubmit","event","state","setState","firebase","resetPassword","then","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","PasswordForgetLink","PASSWORD_FORGET","PasswordForgetForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Message, Button, Form, Segment, Header, Image } from 'semantic-ui-react';\nimport * as ROUTES from '../constants/routes'\nimport { Link } from 'react-router-dom'\nimport { withFirebase } from '../Firebase';\n\nconst PasswordForgetPage = () => (\n    <div>\n        <Grid textAlign=\"center\" className=\"login-background\" style={{\n            height: 100 + 'vh',\n            margin: 0\n        }} verticalAlign=\"middle\">\n            <Grid.Column\n                floated=\"right\"\n                style={{\n                    paddingTop: \"25vh\",\n                    maxWidth: 450,\n                    backgroundColor: \"white\",\n                    height: \"100vh\",\n                    alignContent: \"left\"\n                }}\n                width=\"16\"\n            >\n                <Header as=\"h2\" /* color=\"black\" */ style={{ color: \"black\" }} textAlign=\"center\">\n                    <Image src={require('../assets/images/album-icon.png')} circular />\n                    Reset Your Password\n                </Header>\n\n                <PasswordForgetForm />\n            </Grid.Column>\n        </Grid>\n    </div>\n)\n\nconst INITIAL_STATE = {\n    email: '',\n    error: null,\n    loading: false,\n}\n\nclass PasswordForgetFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE }\n    }\n\n    onSubmit = event => {\n        const { email } = this.state\n\n        this.setState({\n            loading: true\n        })\n\n        this.props.firebase\n            .resetPassword(email)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE })\n            })\n            .catch(error => {\n                this.setState({ error })\n            })\n\n        event.preventDefault()\n    }\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render() {\n        const { email, error, loading } = this.state\n        const isInvalid = email === ''\n\n        return (\n            <div>\n                <Form\n                    size=\"large\"\n                    onSubmit={this.onSubmit}\n                >\n                    <Segment stacked>\n                        <Form.Input\n                            fluid\n                            name=\"email\"\n                            value={this.state.email}\n                            onChange={this.onChange}\n                            icon=\"user\"\n                            iconPosition=\"left\"\n                            placeholder=\"E-mail Address\"\n                        />\n                        {/* <Link to={ROUTES.ACCOUNT}> */}\n                        <Button\n                            disabled={isInvalid}\n                            color=\"google plus\"\n                            fluid\n                            size=\"large\"\n                            type=\"submit\"\n                            loading={loading}\n                        >\n                            Reset My Password\n                        </Button>\n                        {/* </Link> */}\n\n                        {error && <Message>{error.message}</Message>}\n                    </Segment>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst PasswordForgetLink = () => (\n    <Message>\n        <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n    </Message>\n)\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase)\n\nexport default PasswordForgetPage;\nexport { PasswordForgetForm, PasswordForgetLink }"]},"metadata":{},"sourceType":"module"}