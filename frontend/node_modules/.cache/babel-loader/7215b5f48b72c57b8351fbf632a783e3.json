{"ast":null,"code":"import _objectSpread from \"/home/salim/Projects/React/project_album/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/salim/Projects/React/project_album/frontend/src/PasswordChange/index.js\";\nimport React, { Component } from 'react';\nimport { Grid, Message, Button, Form, Segment, Header, Image } from 'semantic-ui-react';\nimport * as ROUTES from '../constants/routes';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\n\nconst PasswordChangePage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(Grid, {\n  textAlign: \"center\",\n  className: \"login-background\",\n  style: {\n    height: 100 + 'vh',\n    margin: 0\n  },\n  verticalAlign: \"middle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(Grid.Column, {\n  floated: \"right\",\n  style: {\n    paddingTop: \"25vh\",\n    maxWidth: 450,\n    backgroundColor: \"white\",\n    height: \"100vh\",\n    alignContent: \"left\"\n  },\n  width: \"16\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(Header, {\n  as: \"h2\"\n  /* color=\"black\" */\n  ,\n  style: {\n    color: \"black\"\n  },\n  textAlign: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(Image, {\n  src: require('../assets/images/album-icon.png'),\n  circular: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), \"Change Your Password\"), React.createElement(PasswordChangeForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}))));\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n  loading: false\n};\n\nclass PasswordChangeFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const passwordOne = this.state.passwordOne;\n      this.setState({\n        loading: true\n      });\n      this.props.firebase.updatePassword(passwordOne).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state = this.state,\n          passwordOne = _this$state.passwordOne,\n          passwordTwo = _this$state.passwordTwo,\n          error = _this$state.error,\n          loading = _this$state.loading;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.onChange,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"New Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.onChange,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Confirm New Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: isInvalid,\n      color: \"google plus\",\n      fluid: true,\n      size: \"large\",\n      type: \"submit\",\n      loading: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Change My Password\"), error && React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, error.message))));\n  }\n\n}\n\nconst PasswordChangeLink = () => React.createElement(Message, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: ROUTES.PASSWORD_CHANGE,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126\n  },\n  __self: this\n}, \"Forgot Password?\"));\n\nconst PasswordChangeForm = withFirebase(PasswordChangeFormBase);\nexport default PasswordChangePage;\nexport { PasswordChangeForm, PasswordChangeLink };","map":{"version":3,"sources":["/home/salim/Projects/React/project_album/frontend/src/PasswordChange/index.js"],"names":["React","Component","Grid","Message","Button","Form","Segment","Header","Image","ROUTES","Link","withFirebase","PasswordChangePage","height","margin","paddingTop","maxWidth","backgroundColor","alignContent","color","require","INITIAL_STATE","passwordOne","passwordTwo","error","loading","PasswordChangeFormBase","constructor","props","onSubmit","event","state","setState","firebase","updatePassword","then","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","PasswordChangeLink","PASSWORD_CHANGE","PasswordChangeForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Message, Button, Form, Segment, Header, Image } from 'semantic-ui-react';\nimport * as ROUTES from '../constants/routes'\nimport { Link } from 'react-router-dom'\nimport { withFirebase } from '../Firebase';\n\nconst PasswordChangePage = () => (\n    <div>\n        <Grid textAlign=\"center\" className=\"login-background\" style={{\n            height: 100 + 'vh',\n            margin: 0\n        }} verticalAlign=\"middle\">\n            <Grid.Column\n                floated=\"right\"\n                style={{\n                    paddingTop: \"25vh\",\n                    maxWidth: 450,\n                    backgroundColor: \"white\",\n                    height: \"100vh\",\n                    alignContent: \"left\"\n                }}\n                width=\"16\"\n            >\n                <Header as=\"h2\" /* color=\"black\" */ style={{ color: \"black\" }} textAlign=\"center\">\n                    <Image src={require('../assets/images/album-icon.png')} circular />\n                    Change Your Password\n                </Header>\n\n                <PasswordChangeForm />\n            </Grid.Column>\n        </Grid>\n    </div>\n)\n\nconst INITIAL_STATE = {\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n    loading: false,\n}\n\nclass PasswordChangeFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE }\n    }\n\n    onSubmit = event => {\n        const { passwordOne } = this.state\n\n        this.setState({\n            loading: true\n        })\n\n        this.props.firebase\n            .updatePassword(passwordOne)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE })\n            })\n            .catch(error => {\n                this.setState({ error })\n            })\n\n        event.preventDefault()\n    }\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render() {\n        const { passwordOne, passwordTwo, error, loading } = this.state\n\n        const isInvalid =\n            passwordOne !== passwordTwo || passwordOne === ''\n\n        return (\n            <div>\n                <Form\n                    size=\"large\"\n                    onSubmit={this.onSubmit}\n                >\n                    <Segment stacked>\n                        <Form.Input\n                            fluid\n                            name=\"passwordOne\"\n                            value={passwordOne}\n                            onChange={this.onChange}\n                            icon=\"lock\"\n                            iconPosition=\"left\"\n                            placeholder=\"New Password\"\n                        />\n                        <Form.Input\n                            fluid\n                            name=\"passwordTwo\"\n                            value={passwordTwo}\n                            onChange={this.onChange}\n                            icon=\"lock\"\n                            iconPosition=\"left\"\n                            placeholder=\"Confirm New Password\"\n                        />\n                        {/* <Link to={ROUTES.ACCOUNT}> */}\n                        <Button\n                            disabled={isInvalid}\n                            color=\"google plus\"\n                            fluid\n                            size=\"large\"\n                            type=\"submit\"\n                            loading=\"\"\n                        >\n                            Change My Password\n                        </Button>\n                        {/* </Link> */}\n\n                        {error && <Message>{error.message}</Message>}\n                    </Segment>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst PasswordChangeLink = () => (\n    <Message>\n        <Link to={ROUTES.PASSWORD_CHANGE}>Forgot Password?</Link>\n    </Message>\n)\n\nconst PasswordChangeForm = withFirebase(PasswordChangeFormBase)\n\nexport default PasswordChangePage;\nexport { PasswordChangeForm, PasswordChangeLink }"]},"metadata":{},"sourceType":"module"}