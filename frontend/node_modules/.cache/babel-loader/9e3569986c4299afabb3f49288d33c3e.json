{"ast":null,"code":"var _jsxFileName = \"/home/salim/Projects/React/project_album/frontend/src/Navs/AccountButton.js\";\nimport React, { Component } from 'react';\nimport { Button, Dropdown, Icon } from 'semantic-ui-react';\nimport { withFirebase } from '../Firebase';\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as ROUTES from '../constants/routes';\nimport { compose } from 'recompose';\nimport SignOutText from './SignOutButton';\n\nconst AccountButton = ({\n  inverted\n}) => // <button type=\"button\">\nReact.createElement(Account, {\n  inverted: inverted,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}) // </button>\n;\n\nclass UserAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  /* componentWillMount() {\n      try {\n          const email = this.props.firebase.displayUserEmail()\n           this.setState({\n              email\n          })\n      } catch (error) { }\n  } */\n\n\n  componentDidMount() {\n    try {\n      const email = this.props.firebase.displayUserEmail();\n      this.setState({\n        email\n      });\n    } catch (error) {\n      this.setState({\n        email: null\n      });\n    }\n\n    this.forceUpdate();\n  }\n  /* componentDidUpdate() {\n      try {\n          const email = this.props.firebase.displayUserEmail()\n           this.setState({\n              email\n          })\n      } catch (error) { }\n  } */\n\n\n  render() {\n    const email = this.state.email;\n    const dropdownTrigger = React.createElement(Button, {\n      inverted: this.props.inverted,\n      icon: \"user circle\"\n      /* content={email} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, email === null && React.createElement(Link, {\n      to: ROUTES.SIGN_IN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Button, {\n      inverted: this.props.inverted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Sign In\")), email && React.createElement(Dropdown, {\n      trigger: dropdownTrigger,\n      pointing: \"top\",\n      direction: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Signed in as \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, email))), React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: ROUTES.ACCOUNT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user\",\n      style: {\n        color: \"black\",\n        paddingRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Account\"))), React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"settings\",\n      style: {\n        color: \"black\",\n        paddingRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Settings\"))), React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"sign out\",\n      style: {\n        color: \"black\",\n        paddingRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(SignOutText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })))) //     <Link to={ROUTES.ACCOUNT}>\n    // </Link>\n    );\n  }\n\n}\n\nconst Account = compose(withRouter, withFirebase)(UserAccount);\nexport default withFirebase(AccountButton);","map":{"version":3,"sources":["/home/salim/Projects/React/project_album/frontend/src/Navs/AccountButton.js"],"names":["React","Component","Button","Dropdown","Icon","withFirebase","Link","withRouter","ROUTES","compose","SignOutText","AccountButton","inverted","UserAccount","constructor","props","state","componentDidMount","email","firebase","displayUserEmail","setState","error","forceUpdate","render","dropdownTrigger","SIGN_IN","ACCOUNT","color","paddingRight","Account"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Dropdown, Icon } from 'semantic-ui-react';\nimport { withFirebase } from '../Firebase';\nimport { Link, withRouter } from \"react-router-dom\"\nimport * as ROUTES from '../constants/routes';\nimport { compose } from 'recompose';\nimport SignOutText from './SignOutButton'\n\nconst AccountButton = ({ inverted }) => (\n    // <button type=\"button\">\n    <Account inverted={inverted} />\n    // </button>\n)\n\nclass UserAccount extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    /* componentWillMount() {\n        try {\n            const email = this.props.firebase.displayUserEmail()\n\n            this.setState({\n                email\n            })\n        } catch (error) { }\n    } */\n\n    componentDidMount() {\n        try {\n            const email = this.props.firebase.displayUserEmail()\n\n            this.setState({\n                email\n            })\n        } catch (error) {\n            this.setState({\n                email: null\n            })\n        }\n        this.forceUpdate()\n    }\n\n    /* componentDidUpdate() {\n        try {\n            const email = this.props.firebase.displayUserEmail()\n\n            this.setState({\n                email\n            })\n        } catch (error) { }\n    } */\n\n    render() {\n        const { email } = this.state\n        const dropdownTrigger = (<Button inverted={this.props.inverted} icon=\"user circle\"/* content={email} */></Button>)\n        return (\n            <div>\n                {email === null &&\n                    <Link to={ROUTES.SIGN_IN}>\n                        <Button inverted={this.props.inverted}>\n                            Sign In\n                        </Button>\n                    </Link>}\n                {email &&\n\n                    <Dropdown trigger={dropdownTrigger} pointing=\"top\" direction=\"left\">\n                        <Dropdown.Menu>\n                            <Dropdown.Item disabled>\n                                <span>\n                                    Signed in as <strong>{email}</strong>\n                                </span>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link to={ROUTES.ACCOUNT}>\n                                    <Icon name=\"user\" style={{ color: \"black\", paddingRight: 5 }} />\n                                    <span style={{ color: \"black\" }}>\n                                        Account\n                                    </span>\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link to={null}>\n                                    <Icon name=\"settings\" style={{ color: \"black\", paddingRight: 5 }} />\n                                    <span style={{ color: \"black\" }}>\n                                        Settings\n                                    </span>\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Icon name=\"sign out\" style={{ color: \"black\", paddingRight: 5 }} />\n                                <SignOutText />\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    //     <Link to={ROUTES.ACCOUNT}>\n                    // </Link>\n                }\n            </div>\n        )\n    }\n}\n\nconst Account = compose(withRouter, withFirebase)(UserAccount)\n\nexport default withFirebase(AccountButton)"]},"metadata":{},"sourceType":"module"}