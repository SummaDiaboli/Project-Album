{"ast":null,"code":"import _objectSpread from \"/home/salim/Projects/React/project_album/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/salim/Projects/React/project_album/frontend/src/PasswordForget/index.js\";\nimport React, { Component } from 'react';\nimport { Grid, Message, Button, Form, Segment } from 'semantic-ui-react';\n\nconst PasswordForgetPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, React.createElement(Grid, {\n  textAlign: \"center\",\n  className: \"login-background\",\n  style: {\n    height: 100 + 'vh',\n    // background: \"linear-gradient(300deg, rgba(210,142,142,1) 21%, rgba(203,17,17,1) 60%, rgba(247,63,63,1) 100%)\",\n    margin: 0\n  },\n  verticalAlign: \"middle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(Grid.Column, {\n  floated: \"right\",\n  style: {\n    paddingTop: \"25vh\",\n    maxWidth: 450,\n    backgroundColor: \"white\",\n    height: \"100vh\",\n    alignContent: \"left\"\n  },\n  width: \"16\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n})));\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const email = this.state.email;\n      this.props.firebase.resetPassword(email).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          error = _this$state.error;\n    const isInvalid = email === '';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: isInvalid,\n      color: \"green\",\n      fluid: true,\n      size: \"large\",\n      type: \"submit\"\n      /*  onClick={auth0Client.signIn} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Reset My Password\"), error && React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, error.message))));\n  }\n\n}\n\nexport default PasswordForgetPage;","map":{"version":3,"sources":["/home/salim/Projects/React/project_album/frontend/src/PasswordForget/index.js"],"names":["React","Component","Grid","Message","Button","Form","Segment","PasswordForgetPage","height","margin","paddingTop","maxWidth","backgroundColor","alignContent","INITIAL_STATE","email","error","PasswordForgetFormBase","constructor","props","onSubmit","event","state","firebase","resetPassword","then","setState","catch","preventDefault","onChange","target","name","value","render","isInvalid","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Message, Button, Form, Segment } from 'semantic-ui-react';\n\nconst PasswordForgetPage = () => (\n    <div>\n        <Grid textAlign=\"center\" className=\"login-background\" style={{\n            height: 100 + 'vh',\n            // background: \"linear-gradient(300deg, rgba(210,142,142,1) 21%, rgba(203,17,17,1) 60%, rgba(247,63,63,1) 100%)\",\n            margin: 0\n        }} verticalAlign=\"middle\">\n            <Grid.Column\n                floated=\"right\"\n                style={{\n                    paddingTop: \"25vh\",\n                    maxWidth: 450,\n                    backgroundColor: \"white\",\n                    height: \"100vh\",\n                    alignContent: \"left\"\n                }}\n                width=\"16\"\n            >\n            </Grid.Column>\n        </Grid>\n    </div>\n)\n\nconst INITIAL_STATE = {\n    email: '',\n    error: null,\n}\n\nclass PasswordForgetFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE }\n    }\n\n    onSubmit = event => {\n        const { email } = this.state\n        this.props.firebase\n            .resetPassword(email)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE })\n            })\n            .catch(error => {\n                this.setState({ error })\n            })\n\n        event.preventDefault()\n    }\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render() {\n        const { email, error } = this.state\n        const isInvalid = email === ''\n\n        return (\n            <div>\n                <Form\n                    size=\"large\"\n                    onSubmit={this.onSubmit}\n                >\n                    <Segment stacked>\n                        <Form.Input\n                            fluid\n                            name=\"email\"\n                            value={email}\n                            onChange={this.onChange}\n                            icon=\"user\"\n                            iconPosition=\"left\"\n                            placeholder=\"E-mail Address\"\n                        />\n                        {/* <Link to={ROUTES.ACCOUNT}> */}\n                        <Button disabled={isInvalid} color=\"green\" fluid size=\"large\" type=\"submit\"/*  onClick={auth0Client.signIn} */>\n                            Reset My Password\n                        </Button>\n                        {/* </Link> */}\n\n                        {error && <Message>{error.message}</Message>}\n                    </Segment>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default PasswordForgetPage;"]},"metadata":{},"sourceType":"module"}