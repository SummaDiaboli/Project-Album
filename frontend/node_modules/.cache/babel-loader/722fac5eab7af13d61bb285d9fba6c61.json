{"ast":null,"code":"var _jsxFileName = \"/home/salim/Projects/React/project_album/frontend/src/constants/SecuredRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport * as ROUTES from './routes'; // import auth0Client from './Auth';\n\nimport { Loader } from 'semantic-ui-react';\nimport { AuthUserContext } from '../Session';\n\nfunction SecuredRoute(props) {\n  const Component = props.component,\n        path = props.path,\n        checkingSession = props.checkingSession,\n        secure = props.secure;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(AuthUserContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, authUser => authUser ? React.createElement(Route, {\n    path: path,\n    render: () => {\n      if (checkingSession) return React.createElement(Loader, {\n        active: true,\n        size: \"big\",\n        content: \"Loading Session...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n      /* if (authUser === null) {\n           // auth0Client.signIn()\n          return <div></div>\n      } */\n\n      return React.createElement(Component, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(Route, {\n    path: path,\n    render: () => {\n      if (secure) return React.createElement(Redirect, {\n        to: ROUTES.SIGN_IN,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n      return React.createElement(Component, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n}\n\nexport default SecuredRoute;","map":{"version":3,"sources":["/home/salim/Projects/React/project_album/frontend/src/constants/SecuredRoute.js"],"names":["React","Route","Redirect","ROUTES","Loader","AuthUserContext","SecuredRoute","props","Component","component","path","checkingSession","secure","authUser","SIGN_IN"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,QAAiC,YAAjC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,QACNC,SADM,GACwDD,KADxD,CACjBE,SADiB;AAAA,QACKC,IADL,GACwDH,KADxD,CACKG,IADL;AAAA,QACWC,eADX,GACwDJ,KADxD,CACWI,eADX;AAAA,QAC4BC,MAD5B,GACwDL,KADxD,CAC4BK,MAD5B;AAEzB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,QAAQ,IAAIA,QAAQ,GACf,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,IAAb;AAAmB,IAAA,MAAM,EAAE,MAAM;AAC/B,UAAIC,eAAJ,EAAqB,OAAO,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,IAAI,EAAC,KAApB;AAA0B,QAAA,OAAO,EAAC,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACrB;;;;;AAKA,aAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KARC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,GAUf,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,MAAM,EAAE,MAAM;AAC/B,UAAIE,MAAJ,EAAY,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAET,MAAM,CAACW,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACZ,aAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXV,CADJ,CADJ;AAoBH;;AAED,eAAeR,YAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport * as ROUTES from './routes'\n// import auth0Client from './Auth';\nimport { Loader } from 'semantic-ui-react';\nimport { AuthUserContext, } from '../Session';\n\nfunction SecuredRoute(props) {\n    const { component: Component, path, checkingSession, secure /* , authUser */ } = props;\n    return (\n        <div>\n            <AuthUserContext.Consumer>\n                {authUser => authUser\n                    ? <Route path={path} render={() => {\n                        if (checkingSession) return <Loader active size=\"big\" content=\"Loading Session...\" />\n                        /* if (authUser === null) {\n\n                            // auth0Client.signIn()\n                            return <div></div>\n                        } */\n                        return <Component />\n                    }} />\n                    : <Route path={path} render={() => {\n                        if (secure) return <Redirect to={ROUTES.SIGN_IN} />\n                        return <Component />\n                    }} />}\n            </AuthUserContext.Consumer>\n        </div>\n    )\n}\n\nexport default SecuredRoute\n"]},"metadata":{},"sourceType":"module"}