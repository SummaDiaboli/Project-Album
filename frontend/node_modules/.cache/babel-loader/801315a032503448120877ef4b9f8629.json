{"ast":null,"code":"var _jsxFileName = \"/home/salim/Projects/React/project_album/frontend/src/Album/index.js\";\nimport React, { Component } from 'react';\nimport { Loader, Segment, Header, Grid, Breadcrumb } from // Input,\n// Button\n\"semantic-ui-react\";\nimport axios from 'axios';\nimport ResponsiveContainer from '../Navs/Header';\nimport Footer from '../Navs/Footer';\nimport * as ROUTES from '../constants/routes'; // import auth0Client from '../constants/Auth';\n\nclass Album extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      album: null,\n      selectedFile: null // this.updatePictures = this.updatePictures.bind(this)\n      // this.onClickHandler = this.onClickHandler.bind(this)\n\n    };\n  }\n\n  async componentDidMount() {\n    const params = this.props.match.params;\n    const album = (await axios.get(\"http://localhost:8081/\".concat(params.albumId))).data;\n    this.setState({\n      album\n    });\n  }\n  /* async componentDidMount() {\n      const { match: { params } } = this.props\n      const album = (await axios.get(`http://localhost:5001/${params.albumId}`)).data\n      this.setState({\n          album\n      })\n  } */\n\n  /* onChangeHandler = event => {\n      const selectedFile = event.target.files[0]\n      this.setState({\n          selectedFile,\n      })\n      console.log(event.target.files[0])\n  } */\n\n  /* updatePictures(value) {\n      this.setState({\n          selectedFile: value\n      })\n  }\n   onClickHandler() {\n      const selectedFile = this.state.selectedFile\n      console.log(selectedFile)\n      const data = new FormData()\n      data.append('file', selectedFile)\n      axios.post('http://localhost:8081/upload', data, {\n          headers: { 'Authorization': `Bearer ${auth0Client.getIdToken()}` }\n      }).then(res => { // then print response status\n          console.log(res.statusText)\n      })\n  } */\n\n\n  render() {\n    const album = this.state.album;\n    if (album === null) return React.createElement(Loader, {\n      active: true,\n      inline: \"centered\",\n      indeterminate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Loading\");\n    return React.createElement(ResponsiveContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      vertical: true,\n      style: {\n        minHeight: 700\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        marginLeft: 100,\n        marginRight: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Breadcrumb.Section, {\n      href: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Link, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \"Albums\"), React.createElement(Breadcrumb.Divider, {\n      icon: \"right angle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Breadcrumb.Section, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, album.title))), React.createElement(Grid, {\n      stackable: true,\n      container: true,\n      celled: \"internally\",\n      style: {\n        minHeight: 700\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, album.title, React.createElement(Header.Subheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, album.description)), album.pictures && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"No Pictures\"), album.pictures.map((picture, idx) => React.createElement(\"p\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, picture.picture))))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Album;","map":{"version":3,"sources":["/home/salim/Projects/React/project_album/frontend/src/Album/index.js"],"names":["React","Component","Loader","Segment","Header","Grid","Breadcrumb","axios","ResponsiveContainer","Footer","ROUTES","Album","constructor","props","state","album","selectedFile","componentDidMount","params","match","get","albumId","data","setState","render","minHeight","marginLeft","marginRight","title","width","description","pictures","map","picture","idx"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Loader,\n    Segment,\n    Header,\n    Grid,\n    Breadcrumb,\n    // Input,\n    // Button\n} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ResponsiveContainer from '../Navs/Header';\nimport Footer from '../Navs/Footer';\nimport * as ROUTES from '../constants/routes'\n// import auth0Client from '../constants/Auth';\n\nclass Album extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            album: null,\n            selectedFile: null\n        }\n\n        // this.updatePictures = this.updatePictures.bind(this)\n        // this.onClickHandler = this.onClickHandler.bind(this)\n    }\n\n    async componentDidMount() {\n        const { match: { params } } = this.props\n        const album = (await axios.get(`http://localhost:8081/${params.albumId}`)).data\n        this.setState({\n            album\n        })\n    }\n\n    /* async componentDidMount() {\n        const { match: { params } } = this.props\n        const album = (await axios.get(`http://localhost:5001/${params.albumId}`)).data\n        this.setState({\n            album\n        })\n    } */\n\n    /* onChangeHandler = event => {\n        const selectedFile = event.target.files[0]\n        this.setState({\n            selectedFile,\n        })\n        console.log(event.target.files[0])\n    } */\n\n    /* updatePictures(value) {\n        this.setState({\n            selectedFile: value\n        })\n    }\n\n    onClickHandler() {\n        const selectedFile = this.state.selectedFile\n        console.log(selectedFile)\n        const data = new FormData()\n        data.append('file', selectedFile)\n        axios.post('http://localhost:8081/upload', data, {\n            headers: { 'Authorization': `Bearer ${auth0Client.getIdToken()}` }\n        }).then(res => { // then print response status\n            console.log(res.statusText)\n        })\n    } */\n\n\n    render() {\n        const { album } = this.state\n        if (album === null) return <Loader active inline=\"centered\" indeterminate>Loading</Loader>\n        return (\n            <ResponsiveContainer>\n                <Segment vertical style={{ minHeight: 700 }}>\n                    <Segment style={{ marginLeft: 100, marginRight: 100 }}>\n                        <Breadcrumb>\n                            <Breadcrumb.Section href>\n                                <Link></Link>Albums\n                                </Breadcrumb.Section>\n                            <Breadcrumb.Divider icon=\"right angle\" />\n                            <Breadcrumb.Section active>{album.title}</Breadcrumb.Section>\n                        </Breadcrumb>\n                    </Segment>\n                    <Grid\n                        stackable\n                        container\n                        celled=\"internally\"\n                        style={{ minHeight: 700 }}\n                    >\n                        <Segment style={{ width: \"100%\", }}>\n                            <Header as=\"h2\">{album.title}\n                                <Header.Subheader>\n                                    {album.description}\n                                </Header.Subheader>\n                            </Header>\n                            {\n                                album.pictures &&\n                                <div>\n                                    No Pictures\n                                    {/* <Input type=\"file\" name=\"file\" onChange={(e) => { this.updatePictures(e.target.value) }} />\n                                    <Button onClick={this.onClickHandler}>Upload</Button> */}\n                                </div>\n                            }\n                            {\n                                album.pictures.map((picture, idx) => (\n                                    <p key={idx}>{picture.picture}</p>\n                                ))\n                            }\n                        </Segment>\n                    </Grid>\n                </Segment>\n                <Footer />\n            </ResponsiveContainer>\n        );\n    }\n}\n\nexport default Album;"]},"metadata":{},"sourceType":"module"}