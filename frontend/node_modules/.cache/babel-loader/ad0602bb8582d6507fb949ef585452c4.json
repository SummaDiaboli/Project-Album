{"ast":null,"code":"var _jsxFileName = \"/home/salim/Projects/React/project_album/frontend/src/Navs/UserButton.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { withFirebase } from '../Firebase';\n\nconst AccountButton = () => // <button type=\"button\">\nReact.createElement(Email, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}) // </button>\n;\n\nclass UserEmail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailAvailable: false\n    };\n  }\n  /* componentWillMount() {\n      try {\n          const email = this.props.firebase.displayUserEmail()\n           this.setState({\n              email\n          })\n      } catch (error) { }\n  } */\n\n\n  componentDidMount() {\n    try {\n      const email = this.props.firebase.displayUserEmail();\n      this.setState({\n        email,\n        emailAvailable: true\n      });\n    } catch (error) {\n      this.setState({\n        email: null\n      });\n    }\n\n    this.forceUpdate();\n  }\n  /* componentDidUpdate() {\n      try {\n          const email = this.props.firebase.displayUserEmail()\n           this.setState({\n              email\n          })\n      } catch (error) { }\n  } */\n\n\n  render() {\n    if (this.state.emailAvailable) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.email && React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.email));\n    }\n  }\n\n}\n\nconst Email = withFirebase(UserEmail);\nexport default withFirebase(AccountButton);","map":{"version":3,"sources":["/home/salim/Projects/React/project_album/frontend/src/Navs/UserButton.js"],"names":["React","Component","Button","withFirebase","AccountButton","UserEmail","constructor","props","state","emailAvailable","componentDidMount","email","firebase","displayUserEmail","setState","error","forceUpdate","render","Email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,aAAa,GAAG,MAClB;AACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFkB,CAGlB;AAHJ;;AAMA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC9BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE;AADP,KAAb;AAGH;AAED;;;;;;;;;;AAUAC,EAAAA,iBAAiB,GAAG;AAChB,QAAI;AACA,YAAMC,KAAK,GAAG,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,gBAApB,EAAd;AAEA,WAAKC,QAAL,CAAc;AACVH,QAAAA,KADU;AAEVF,QAAAA,cAAc,EAAE;AAFN,OAAd;AAIH,KAPD,CAOE,OAAOM,KAAP,EAAc;AACZ,WAAKD,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE;AADG,OAAd;AAGH;;AACD,SAAKK,WAAL;AACH;AAGD;;;;;;;;;;AAUAC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKT,KAAL,CAAWC,cAAf,EAA+B;AAC3B,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWG,KAAX,IAAoB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,KAAKH,KAAL,CAAWG,KAApB,CADzB,CADJ;AAKH;AACJ;;AArD6B;;AAwDlC,MAAMO,KAAK,GAAGf,YAAY,CAACE,SAAD,CAA1B;AAEA,eAAeF,YAAY,CAACC,aAAD,CAA3B","sourcesContent":["import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react';\nimport { withFirebase } from '../Firebase';\n\nconst AccountButton = () => (\n    // <button type=\"button\">\n    <Email />\n    // </button>\n)\n\nclass UserEmail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            emailAvailable: false\n        }\n    }\n\n    /* componentWillMount() {\n        try {\n            const email = this.props.firebase.displayUserEmail()\n\n            this.setState({\n                email\n            })\n        } catch (error) { }\n    } */\n\n    componentDidMount() {\n        try {\n            const email = this.props.firebase.displayUserEmail()\n\n            this.setState({\n                email,\n                emailAvailable: true\n            })\n        } catch (error) {\n            this.setState({\n                email: null,\n            })\n        }\n        this.forceUpdate()\n    }\n\n\n    /* componentDidUpdate() {\n        try {\n            const email = this.props.firebase.displayUserEmail()\n\n            this.setState({\n                email\n            })\n        } catch (error) { }\n    } */\n\n    render() {\n        if (this.state.emailAvailable) {\n            return (\n                <div>\n                    {this.state.email && <Button>{this.state.email}</Button>}\n                </div>\n            )\n        }\n    }\n}\n\nconst Email = withFirebase(UserEmail)\n\nexport default withFirebase(AccountButton)"]},"metadata":{},"sourceType":"module"}