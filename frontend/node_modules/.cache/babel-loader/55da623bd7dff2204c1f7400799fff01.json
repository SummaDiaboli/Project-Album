{"ast":null,"code":"var _jsxFileName = \"/home/salim/Projects/React/project_album/frontend/src/Navs/UserButton.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { withFirebase } from '../Firebase';\n\nconst AccountButton = () => // <button type=\"button\">\nReact.createElement(Email, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}) // </button>\n;\n\nclass UserEmail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  /* componentWillMount() {\n      try {\n          const email = this.props.firebase.displayUserEmail()\n           this.setState({\n              email\n          })\n      } catch (error) { }\n  } */\n\n\n  componentDidMount() {\n    try {\n      const email = () => {\n        return new Promise(resolve => this.props.firebase.displayUserEmail()).then(() => this.setState({\n          email\n        }));\n      };\n\n      this.setState({\n        email\n      });\n    } catch (error) {\n      this.setState({\n        email: null\n      });\n    }\n\n    this.forceUpdate();\n  }\n  /* componentDidUpdate() {\n      try {\n          const email = this.props.firebase.displayUserEmail()\n           this.setState({\n              email\n          })\n      } catch (error) { }\n  } */\n\n\n  render() {\n    const email = this.state.email;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, email === null && React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Sign In\"), email && React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, email));\n  }\n\n}\n\nconst Email = withFirebase(UserEmail);\nexport default withFirebase(AccountButton);","map":{"version":3,"sources":["/home/salim/Projects/React/project_album/frontend/src/Navs/UserButton.js"],"names":["React","Component","Button","withFirebase","AccountButton","UserEmail","constructor","props","state","componentDidMount","email","Promise","resolve","firebase","displayUserEmail","then","setState","error","forceUpdate","render","Email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,aAAa,GAAG,MAClB;AACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFkB,CAGlB;AAHJ;;AAMA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC9BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEH;AAED;;;;;;;;;;AAUAC,EAAAA,iBAAiB,GAAG;AAChB,QAAI;AACA,YAAMC,KAAK,GAAG,MAAM;AAChB,eAAO,IAAIC,OAAJ,CAAaC,OAAD,IACf,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,gBAApB,EADG,EAGFC,IAHE,CAGG,MAAM,KAAKC,QAAL,CAAc;AACtBN,UAAAA;AADsB,SAAd,CAHT,CAAP;AAMH,OAPD;;AASA,WAAKM,QAAL,CAAc;AACVN,QAAAA;AADU,OAAd;AAKH,KAfD,CAeE,OAAOO,KAAP,EAAc;AACZ,WAAKD,QAAL,CAAc;AACVN,QAAAA,KAAK,EAAE;AADG,OAAd;AAGH;;AACD,SAAKQ,WAAL;AACH;AAED;;;;;;;;;;AAUAC,EAAAA,MAAM,GAAG;AAAA,UACGT,KADH,GACa,KAAKF,KADlB,CACGE,KADH;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,KAAK,IAAV,IAAkB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADvB,EAEKA,KAAK,IAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,KAAT,CAFd,CADJ;AAMH;;AA3D6B;;AA8DlC,MAAMU,KAAK,GAAGjB,YAAY,CAACE,SAAD,CAA1B;AAEA,eAAeF,YAAY,CAACC,aAAD,CAA3B","sourcesContent":["import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react';\nimport { withFirebase } from '../Firebase';\n\nconst AccountButton = () => (\n    // <button type=\"button\">\n    <Email />\n    // </button>\n)\n\nclass UserEmail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    /* componentWillMount() {\n        try {\n            const email = this.props.firebase.displayUserEmail()\n\n            this.setState({\n                email\n            })\n        } catch (error) { }\n    } */\n\n    componentDidMount() {\n        try {\n            const email = () => {\n                return new Promise((resolve) =>\n                    this.props.firebase.displayUserEmail()\n                )\n                    .then(() => this.setState({\n                        email\n                    }))\n            }\n\n            this.setState({\n                email\n            })\n\n\n        } catch (error) {\n            this.setState({\n                email: null\n            })\n        }\n        this.forceUpdate()\n    }\n\n    /* componentDidUpdate() {\n        try {\n            const email = this.props.firebase.displayUserEmail()\n\n            this.setState({\n                email\n            })\n        } catch (error) { }\n    } */\n\n    render() {\n        const { email } = this.state\n        return (\n            <div>\n                {email === null && <Button>Sign In</Button>}\n                {email && <Button>{email}</Button>}\n            </div>\n        )\n    }\n}\n\nconst Email = withFirebase(UserEmail)\n\nexport default withFirebase(AccountButton)"]},"metadata":{},"sourceType":"module"}