{"ast":null,"code":"var _jsxFileName = \"/home/salim/Projects/React/project_album/frontend/src/Navs/AccountButton.js\";\nimport React, { Component } from 'react';\nimport { Button, Dropdown, Icon } from 'semantic-ui-react';\nimport { withFirebase } from '../Firebase';\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as ROUTES from '../constants/routes';\nimport { compose } from 'recompose';\nimport { AuthUserContext } from '../Session';\n\nconst AccountButton = ({\n  inverted\n}) => React.createElement(Account, {\n  inverted: inverted,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n});\n\nclass UserAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {// username: ''\n    };\n  }\n\n  componentDidMount() {\n    const rehydrate = JSON.parse(localStorage.getItem);\n\n    try {\n      // const email = this.props.firebase.displayUserEmail()\n      const uid = this.props.firebase.getUid(); // console.log(uid)\n\n      this.props.firebase.user(uid).get().then(doc => {\n        let data = doc.data(); // console.log(data.username)\n\n        let username = data.username;\n        this.setState({\n          username\n        });\n      });\n      /* this.setState({\n          email\n      }) */\n    } catch (error) {\n      this.setState({\n        email: null\n      });\n    }\n\n    this.forceUpdate();\n  }\n\n  componentWillUnmount() {\n    localStorage.setItem('savedUsername', JSON.stringify(this.state));\n  }\n\n  render() {\n    const username = this.state.username;\n    const dropdownTrigger = React.createElement(Button, {\n      inverted: this.props.inverted,\n      icon: \"user\",\n      content: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, authUser => authUser ? React.createElement(Dropdown, {\n      trigger: dropdownTrigger,\n      pointing: \"top right\",\n      direction: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Signed in as \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, authUser.email))), React.createElement(Dropdown.Item, {\n      as: Link,\n      to: ROUTES.ACCOUNT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user\",\n      style: {\n        color: \"black\",\n        paddingRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \"Account\")), React.createElement(Dropdown.Item, {\n      as: Link,\n      to: ROUTES.SETTINGS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"black\",\n        width: \"100%\",\n        display: \"block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"settings\",\n      style: {\n        color: \"black\",\n        paddingRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \"Settings\")), React.createElement(Dropdown.Item, {\n      onClick: () => {\n        this.props.firebase.signOut();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"sign out\",\n      style: {\n        color: \"black\",\n        paddingRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Sign Out\")))) : React.createElement(Link, {\n      to: ROUTES.SIGN_IN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Button, {\n      inverted: this.props.inverted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Sign In\"))));\n  }\n\n}\n\nconst Account = compose(withRouter, withFirebase)(UserAccount);\nexport default withFirebase(AccountButton);","map":{"version":3,"sources":["/home/salim/Projects/React/project_album/frontend/src/Navs/AccountButton.js"],"names":["React","Component","Button","Dropdown","Icon","withFirebase","Link","withRouter","ROUTES","compose","AuthUserContext","AccountButton","inverted","UserAccount","constructor","props","state","componentDidMount","rehydrate","JSON","parse","localStorage","getItem","uid","firebase","getUid","user","get","then","doc","data","username","setState","error","email","forceUpdate","componentWillUnmount","setItem","stringify","render","dropdownTrigger","authUser","ACCOUNT","color","paddingRight","SETTINGS","width","display","signOut","SIGN_IN","Account"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Dropdown, Icon, } from 'semantic-ui-react';\nimport { withFirebase } from '../Firebase';\nimport { Link, withRouter } from \"react-router-dom\"\nimport * as ROUTES from '../constants/routes';\nimport { compose } from 'recompose';\nimport { AuthUserContext } from '../Session';\n\nconst AccountButton = ({ inverted }) => (\n    <Account inverted={inverted} />\n)\n\nclass UserAccount extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // username: ''\n        }\n    }\n\n    componentDidMount() {\n        const rehydrate = JSON.parse(localStorage.getItem)\n\n        try {\n            // const email = this.props.firebase.displayUserEmail()\n            const uid = this.props.firebase.getUid()\n            // console.log(uid)\n\n            this.props.firebase\n                .user(uid)\n                .get()\n                .then(doc => {\n                    let data = doc.data()\n                    // console.log(data.username)\n                    let username = data.username\n                    this.setState({\n                        username\n                    })\n                })\n\n            /* this.setState({\n                email\n            }) */\n\n        } catch (error) {\n            this.setState({\n                email: null\n            })\n        }\n        this.forceUpdate()\n    }\n\n    componentWillUnmount() {\n        localStorage.setItem('savedUsername', JSON.stringify(this.state))\n    }\n\n\n    render() {\n        const { username } = this.state\n        const dropdownTrigger = (<Button inverted={this.props.inverted} icon=\"user\" content={username} />)\n        return (\n            <div>\n                <AuthUserContext.Consumer>\n                    {/* {email === null &&\n                        <Link to={ROUTES.SIGN_IN}>\n                            <Button inverted={this.props.inverted}>\n                                Sign In\n                        </Button>\n                        </Link>} */}\n                    {authUser => (\n                        authUser\n                            ? <Dropdown trigger={dropdownTrigger} pointing=\"top right\" direction=\"left\">\n                                <Dropdown.Menu>\n                                    <Dropdown.Item disabled>\n                                        <span>\n                                            Signed in as <strong>{authUser.email}</strong>\n                                        </span>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item as={Link} to={ROUTES.ACCOUNT}>\n                                        <span style={{ color: \"black\", }}>\n                                            <Icon name=\"user\" style={{ color: \"black\", paddingRight: 5 }} />\n                                            Account\n                                        </span>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item as={Link} to={ROUTES.SETTINGS}>\n                                        <span style={{ color: \"black\", width: \"100%\", display: \"block\" }}>\n                                            <Icon name=\"settings\" style={{ color: \"black\", paddingRight: 5 }} />\n                                            Settings\n                                        </span>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item onClick={() => {\n                                        this.props.firebase.signOut()\n                                    }}>\n                                        <Icon name=\"sign out\" style={{ color: \"black\", paddingRight: 5 }} />\n                                        <span style={{ color: \"black\" }}>Sign Out</span>\n                                    </Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                            : <Link to={ROUTES.SIGN_IN}>\n                                <Button inverted={this.props.inverted}>\n                                    Sign In\n                                </Button>\n                            </Link>\n                    )}\n                    {/* {email &&\n\n                        <Dropdown trigger={dropdownTrigger} pointing=\"top right\" direction=\"left\">\n                            <Dropdown.Menu>\n                                <Dropdown.Item disabled>\n                                    <span>\n                                        Signed in as <strong>{email}</strong>\n                                    </span>\n                                </Dropdown.Item>\n                                <Link to={ROUTES.ACCOUNT}>\n                                    <Dropdown.Item>\n                                        <Icon name=\"user\" style={{ color: \"black\", paddingRight: 5 }} />\n                                        <span style={{ color: \"black\" }}>\n                                            Account\n                                    </span>\n                                    </Dropdown.Item>\n                                </Link>\n                                <Link to={ROUTES.SETTINGS}>\n                                    <Dropdown.Item>\n                                        <Icon name=\"settings\" style={{ color: \"black\", paddingRight: 5 }} />\n                                        <span style={{ color: \"black\" }}>\n                                            Settings\n                                    </span>\n                                    </Dropdown.Item>\n                                </Link>\n                                <Dropdown.Item onClick={() => {\n                                    this.props.firebase.signOut()\n                                }}>\n                                    <Icon name=\"sign out\" style={{ color: \"black\", paddingRight: 5 }} />\n                                    <span style={{ color: \"black\" }}>\n                                        Sign Out\n                                </span>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        //     <Link to={ROUTES.ACCOUNT}>\n                        // </Link>\n                    } */}\n                </AuthUserContext.Consumer>\n            </div>\n        )\n    }\n}\n\nconst Account = compose(withRouter, withFirebase)(UserAccount)\n\nexport default withFirebase(AccountButton)"]},"metadata":{},"sourceType":"module"}